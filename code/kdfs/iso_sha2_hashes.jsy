#IF PLAT_NODEJS
  import {createHash} from 'crypto'
  function _bind_sha_digest(variant) ::
    const _create_hash_ = createHash.bind(null, 'sha'+variant)
    return async data => new Uint8Array @
      _create_hash_().update(await data).digest()

#ELIF PLAT_WEB
  function _bind_sha_digest(variant) ::
    const _digest_ = crypto.subtle
      .digest.bind @ crypto.subtle, { name: 'SHA-'+variant }

    return async data => new Uint8Array @
      await _digest_ @ await data 

export const u8_sha_256 = _bind_sha_digest('256')
export const u8_sha_384 = _bind_sha_digest('384')
export const u8_sha_512 = _bind_sha_digest('512')

export default u8_sha_256
